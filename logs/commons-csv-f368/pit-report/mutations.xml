<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>10</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>12</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::validate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>15</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>17</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>19</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>21</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>23</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>24</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>26</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>28</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>29</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>31</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>33</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>34</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>36</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsEscape(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>38</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>39</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>41</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsNullString(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><block>43</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><block>45</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><block>47</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>49</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>226</index><block>51</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>231</index><block>52</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>54</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEquals(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>16</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsWithNull(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>18</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEquals(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>20</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsOne(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>22</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>25</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>27</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>30</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>115</index><block>32</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>130</index><block>35</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>143</index><block>37</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsEscape(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>158</index><block>40</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>171</index><block>42</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsNullString(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>184</index><block>44</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsHeader(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>196</index><block>46</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>208</index><block>48</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>220</index><block>50</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>235</index><block>53</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>248</index><block>55</block><killingTest>org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>253</index><block>56</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>([Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>57</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getAllowMissingColumnNames</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>69</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissingException(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='83'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getAutoFlush</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>70</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='113'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>71</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getCommentMarker to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='179'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>72</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='112'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>73</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getEscapeCharacter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='161'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>74</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='161'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>76</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeaderComments</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>77</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeaderComments</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>79</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getHeaderComments to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='108'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>80</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreHeaderCase</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>81</block><killingTest>org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='107'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>82</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>83</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getNullString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>84</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getQuoteCharacter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteMode</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/QuoteMode;</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>85</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getQuoteMode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getRecordSeparator</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>86</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getRecordSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getSkipHeaderRecord</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>87</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='89'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrailingDelimiter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>88</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='149'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>89</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>90</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>90</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>90</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>92</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>92</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>94</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>94</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>96</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>96</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>98</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>98</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>100</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>100</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>102</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>102</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>104</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>104</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>106</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>106</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>108</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>108</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>110</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>110</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>110</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>90</block><killingTest>org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>92</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>94</block><killingTest>org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>96</block><killingTest>org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>98</block><killingTest>org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>100</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>102</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>104</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>106</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>108</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>213</index><block>110</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isCommentMarkerSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>111</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isCommentMarkerSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>113</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isEscapeCharacterSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>114</block><killingTest>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isEscapeCharacterSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>116</block><killingTest>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='172'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='172'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='172'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='97'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(Ljava/lang/Character;)Z</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='97'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(Ljava/lang/Character;)Z</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='97'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isLineBreak</mutatedMethod><methodDescription>(Ljava/lang/Character;)Z</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>7</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isNullStringSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>117</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isNullStringSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>119</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderComments(org.apache.commons.csv.CSVFormatTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isQuoteCharacterSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>120</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>isQuoteCharacterSet</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>122</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>newFormat</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::newFormat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>123</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>125</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>124</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>126</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>127</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>129</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>132</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>134</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Appendable;Z)V</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>136</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>144</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>137</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>138</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>140</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>142</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>141</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::printAndQuote</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>143</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::printAndEscape</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>145</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>146</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>151</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>118</index><block>156</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><block>155</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>146</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>155</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>146</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>147</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>148</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>149</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>150</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>151</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>152</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>154</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndEscape</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><block>156</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>164</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='57'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><block>167</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>169</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>179</index><block>177</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>243</index><block>183</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='55'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>156</index><block>175</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>272</index><block>185</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>158</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>177</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>185</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>158</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>160</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>164</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>165</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>167</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>169</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>170</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><block>171</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>172</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>173</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>176</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><block>177</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>178</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><block>181</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><block>183</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><block>184</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printAndQuote</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V</methodDescription><lineNumber>1201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>163</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::printAndEscape</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Appendable;[Ljava/lang/Object;)V</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>191</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Appendable;[Ljava/lang/Object;)V</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>191</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Appendable;[Ljava/lang/Object;)V</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>192</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Appendable;[Ljava/lang/Object;)V</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>194</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Appendable;[Ljava/lang/Object;)V</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>195</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>printer</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVPrinter;</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>187</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::printer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='59'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)V</methodDescription><lineNumber>1308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>188</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='59'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)V</methodDescription><lineNumber>1311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>189</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>196</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>197</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>198</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>199</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>200</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>201</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>202</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>203</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>204</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><block>205</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>226</index><block>206</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>209</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>207</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>209</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>210</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='163'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>208</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::toStringArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>toStringArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/String;</methodDescription><lineNumber>1394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>213</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::toStringArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>216</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>217</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>219</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>220</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>222</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>223</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>218</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><block>221</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>220</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>214</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>216</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>217</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>219</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>220</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>222</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>223</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>215</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::trim to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>225</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::trim to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>204</index><block>247</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>238</index><block>250</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>226</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>228</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>229</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>231</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>232</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>234</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>235</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>237</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>238</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>240</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>241</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>243</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>244</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>246</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><block>247</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><block>248</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.csv.CSVFormatPredefinedTest.testTDF(org.apache.commons.csv.CSVFormatPredefinedTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::valueOf to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withAllowMissingColumnNames</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>252</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissing(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withAllowMissingColumnNames to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withAllowMissingColumnNames</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>253</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissing(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withAllowMissingColumnNames to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withAutoFlush</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>254</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withAutoFlush to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withCommentMarker</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>255</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withCommentMarker to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withCommentMarker</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>256</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withCommentMarker</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>258</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withCommentMarker to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withDelimiter</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>259</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withDelimiter</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>261</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withDelimiter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withEscape</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>262</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withEscape to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withEscape</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>263</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='49'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withEscape</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>265</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withEscape to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withFirstRecordAsHeader</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>266</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withFirstRecordAsHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>268</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(org.apache.commons.csv.CSVFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>267</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>268</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(org.apache.commons.csv.CSVFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>270</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(org.apache.commons.csv.CSVFormatTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>271</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>273</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>275</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>276</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>276</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>274</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>275</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>277</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeader</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>278</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withHeaderComments</mutatedMethod><methodDescription>([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>279</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withHeaderComments to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreEmptyLines</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>280</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreEmptyLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreEmptyLines</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>281</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreEmptyLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreHeaderCase</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>282</block><killingTest>org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreHeaderCase to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreHeaderCase</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>283</block><killingTest>org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreHeaderCase to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>284</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreSurroundingSpaces to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withIgnoreSurroundingSpaces</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>285</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withIgnoreSurroundingSpaces to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withNullString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>286</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withNullString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withQuote</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>287</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withQuote to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withQuote</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>288</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withQuote</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>290</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withQuote to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withQuoteMode</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>291</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withQuoteMode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withRecordSeparator</mutatedMethod><methodDescription>(C)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>292</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(org.apache.commons.csv.CSVFormatTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withRecordSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withRecordSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>293</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withRecordSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withSkipHeaderRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>294</block><killingTest>org.apache.commons.csv.CSVParserTest.testTrim(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withSkipHeaderRecord to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withSkipHeaderRecord</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>295</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withSkipHeaderRecord to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withSystemRecordSeparator</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>296</block><killingTest>org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator(org.apache.commons.csv.CSVFormatTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withSystemRecordSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withTrailingDelimiter</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>1993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>297</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withTrailingDelimiter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withTrailingDelimiter</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>2006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>298</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withTrailingDelimiter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withTrim</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>2018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>299</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withTrim to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>withTrim</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>2031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>300</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::withTrim to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='77'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>124</block><killingTest>org.apache.commons.csv.CSVParserTest.testClose(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>66</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/Lexer::getCharacterPosition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>65</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/Lexer::getCurrentLineNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getFirstEol</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/Lexer::getFirstEol to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>93</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>115</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>117</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>106</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>108</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>103</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>105</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>109</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>111</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isMetaChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>118</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isMetaChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>119</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isMetaChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>120</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isMetaChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>121</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isMetaChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>123</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>112</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>114</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>98</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>99</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>100</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>102</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>94</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>95</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>97</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='99'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>62</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='99'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>64</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>5</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>7</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>8</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>9</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>11</block><killingTest>org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>13</block><killingTest>org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>16</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>17</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>18</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>19</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><block>23</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><block>27</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>6</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='55'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>10</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>118</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>140</index><block>15</block><killingTest>org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>244</index><block>30</block><killingTest>org.apache.commons.csv.LexerTest.testTab(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>44</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>45</block><killingTest>org.apache.commons.csv.CSVParserTest.testBackslashEscaping(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>48</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>49</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>51</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>53</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>55</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken5(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>57</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken4(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>59</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='21'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>106</index><block>52</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Lexer::parseEncapsulatedToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>127</index><block>54</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Lexer::parseEncapsulatedToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='18'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseEncapsulatedToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>143</index><block>56</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Lexer::parseEncapsulatedToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>31</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>33</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>35</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>37</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>38</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedTab(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='94'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>42</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='94'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>133</index><block>43</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Lexer::parseSimpleToken to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><block>43</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>removed call to org/apache/commons/csv/Lexer::trimTrailingSpaces</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>82</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken5(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>83</block><killingTest>org.apache.commons.csv.LexerTest.testCR(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='27'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>84</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>85</block><killingTest>org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>86</block><killingTest>org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='97'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>88</block><killingTest>org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>89</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>90</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>92</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>74</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>67</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>68</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomMySql(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>69</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>70</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>71</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>72</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedTab(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>75</block><killingTest>org.apache.commons.csv.LexerTest.testBackslashWithEscaping(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEscape</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>76</block><killingTest>org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>77</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>78</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>79</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>77</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>78</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>80</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>trimTrailingSpaces</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>81</block><killingTest>org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(org.apache.commons.csv.LexerTest)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='75'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>7</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='75'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>7</block><killingTest>org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='75'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>8</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>10</block><killingTest>org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>11</block><killingTest>org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>12</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>14</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.csv.CSVParserTest.testClose(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.csv.CSVParserTest.testClose(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Lexer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/CSVParser::getCurrentLineNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getFirstEndOfLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>20</block><killingTest>org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::getFirstEndOfLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getHeaderMap</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.csv.CSVParserTest.testNoHeaderMap(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getHeaderMap</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.csv.CSVParserTest.testNoHeaderMap(org.apache.commons.csv.CSVParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::getHeaderMap to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getRecordNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/CSVParser::getRecordNumber</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getRecords</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>getRecords</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>27</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::getRecords to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>36</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>44</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>28</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>29</block><killingTest>org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>31</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>32</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>34</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>35</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>36</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>37</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>38</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissing(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>40</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>41</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissing(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>42</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeadersMissingException(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='71'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>170</index><block>45</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::initializeHeader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>46</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::iterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>48</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(org.apache.commons.csv.CSVParserTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>59</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>50</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>53</block><killingTest>org.apache.commons.csv.CSVParserTest.testHeaderComment(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>57</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>58</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>59</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>208</index><block>61</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::nextRecord to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>48</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>48</block><killingTest/><description>removed call to org/apache/commons/csv/Token::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>48</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>removed call to org/apache/commons/csv/CSVParser::addRecordValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>49</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testRandomTdf(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVParser::addRecordValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>51</block><killingTest>org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/CSVParser::addRecordValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>0</block><killingTest>org.apache.commons.csv.CSVFileParserTest.testCSVFile[5](org.apache.commons.csv.CSVFileParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.csv.CSVParserTest.testParseFileNullFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>1</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.csv.CSVParserTest.testParseNullStringFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='46'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>4</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>5</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>5</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(org.apache.commons.csv.CSVParserTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>5</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVParser::parse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>2</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTest/><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>1</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><block>3</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>0</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>1</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>2</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>4</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>5</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>0</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/Assertions::notNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>3</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printComment</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>6</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='84'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='84'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>10</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='84'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to java/io/Flushable::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='81'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>12</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>14</block><killingTest/><description>removed call to java/io/Flushable::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>getOut</mutatedMethod><methodDescription>()Ljava/lang/Appendable;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVPrinter::getOut to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>16</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>20</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>23</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><block>24</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>21</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>22</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>19</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>20</block><killingTest>org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments(org.apache.commons.csv.issues.JiraCsv164Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>20</block><killingTest/><description>removed call to org/apache/commons/csv/CSVPrinter::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>23</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printComment</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>25</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>28</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>29</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecord</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>30</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>32</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>34</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>33</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>35</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>36</block><killingTest/><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>46</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><block>47</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>45</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>46</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>47</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>(Ljava/sql/ResultSet;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>48</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>38</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><block>43</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>38</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>39</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>41</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>40</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>42</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>printRecords</mutatedMethod><methodDescription>([Ljava/lang/Object;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>43</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>removed call to org/apache/commons/csv/CSVPrinter::printRecord</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CSVPrinter.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVPrinter</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>26</block><killingTest>org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(org.apache.commons.csv.CSVRecordTest)</killingTest><description>removed call to org/apache/commons/csv/CSVFormat::println</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='82'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>32</block><killingTest/><description>removed call to java/io/BufferedReader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>29</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>24</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>25</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>26</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>27</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>28</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/ExtendedBufferedReader::getCurrentLineNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getCurrentLineNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>29</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/ExtendedBufferedReader::getCurrentLineNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='101'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>30</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/ExtendedBufferedReader::getPosition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>lookAhead</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>23</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>lookAhead</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.csv.LexerTest.testNextToken6(org.apache.commons.csv.LexerTest)</killingTest><description>removed call to java/io/BufferedReader::mark</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>lookAhead</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>23</block><killingTest/><description>removed call to java/io/BufferedReader::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='102'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>4</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(org.apache.commons.csv.CSVParserTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='102'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='102'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='102'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>11</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><block>16</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>9</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>12</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>14</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>16</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>17</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>17</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>19</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>11</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>13</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>15</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>127</index><block>19</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>21</block><killingTest>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>20</block><killingTest>org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>22</block><killingTest>org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(org.apache.commons.csv.LexerTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/ExtendedBufferedReader::readLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='85'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.csv.CSVRecordTest.testGetInt(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::get to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Enum;)Ljava/lang/String;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::get to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>9</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::get to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/CSVRecord::getCharacterPosition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>getComment</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.csv.CSVFileParserTest.testCSVFile[4](org.apache.commons.csv.CSVFileParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::getComment to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>getRecordNumber</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/csv/CSVRecord::getRecordNumber</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>hasComment</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>hasComment</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isConsistent</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsConsistent(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isConsistent</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>15</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsConsistent(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isConsistent</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>17</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsConsistent(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isMapped</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isMapped</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>22</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isMapped</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>24</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isSet</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>26</block><killingTest>org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(org.apache.commons.csv.CSVParserTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isSet</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>25</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isSet</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>26</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>isSet</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>28</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIsSet(org.apache.commons.csv.CSVRecordTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIterator(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::iterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>putIn</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>33</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>putIn</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>30</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>putIn</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>33</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>putIn</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>31</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::putIn to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>putIn</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>35</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMap(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::putIn to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>36</block><killingTest>org.apache.commons.csv.CSVParserTest.testTrim(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>37</block><killingTest>org.apache.commons.csv.CSVRecordTest.testIterator(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::toList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>toMap</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>38</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::toMap to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>39</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>values</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>40</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::values to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser$CSVRecordIterator::getNextRecord to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>3</block><killingTest>org.apache.commons.csv.CSVParserTest.testRoundtrip(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.csv.CSVParserTest.testRoundtrip(org.apache.commons.csv.CSVParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTest>org.apache.commons.csv.CSVParserTest.testClose(org.apache.commons.csv.CSVParserTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>8</block><killingTest>org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(org.apache.commons.csv.CSVPrinterTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(org.apache.commons.csv.CSVRecordTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$CSVRecordIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>14</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVParser$CSVRecordIterator::next to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.csv.issues.JiraCsv198Test.test(org.apache.commons.csv.issues.JiraCsv198Test)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/csv/Token::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='169'><sourceFile>Assertions.java</sourceFile><mutatedClass>org.apache.commons.csv.Assertions</mutatedClass><mutatedMethod>notNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode(org.apache.commons.csv.issues.JiraCsv203Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat$Predefined</mutatedClass><mutatedMethod>getFormat</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVFormat;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter(org.apache.commons.csv.CSVFormatTest)</killingTest><description>mutated return of Object value for org/apache/commons/csv/CSVFormat$Predefined::getFormat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
