<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>50</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::byteCountToDisplaySize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>37</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>39</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>41</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>43</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><block>45</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>47</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>37</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>39</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>41</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>43</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>45</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>47</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>167</index><block>49</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::byteCountToDisplaySize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checkDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>588</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checkDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>590</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checkFileRequirements</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>296</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checkFileRequirements</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>298</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checkFileRequirements</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>300</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>2887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>624</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>2893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>637</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksum(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::checksum to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksumCRC32</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>623</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::checksumCRC32</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>395</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>397</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>395</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>398</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>396</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>538</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>540</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>538</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>541</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>539</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::forceDeleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>86</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>88</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>90</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>91</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>93</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>95</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>87</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>89</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>94</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>96</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>118</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>120</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>122</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>123</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>125</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>127</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>129</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>119</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>121</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>126</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>convertFileCollectionToFileArray</mutatedMethod><methodDescription>(Ljava/util/Collection;)[Ljava/io/File;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>55</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileUtils::convertFileCollectionToFileArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>281</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;)V</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>283</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><block>292</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><block>293</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><block>294</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>284</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>286</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>288</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>289</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>291</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>292</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>293</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>284</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::checkFileRequirements</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><block>295</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>282</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>270</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>272</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>273</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>275</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>277</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>278</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>280</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>189</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>190</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>192</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>194</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>195</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>196</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>198</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>199</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1060</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>190</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::checkFileRequirements</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>121</index><block>201</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>182</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>183</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>185</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>186</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>188</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyInputStreamToFile</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/File;)V</methodDescription><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>325</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>360</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFileSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>362</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>364</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>363</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>1566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>365</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectoryToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/io/File;)V</methodDescription><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>368</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyToDirectory</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/io/File;)V</methodDescription><lineNumber>1599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>371</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;)V</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>323</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyInputStreamToFile</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>324</block><killingTest/><description>removed call to java/net/URLConnection::setConnectTimeout</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>324</block><killingTest/><description>removed call to java/net/URLConnection::setReadTimeout</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>324</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyInputStreamToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>157</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>158</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>160</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><block>162</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><block>160</block><killingTest/><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>171</index><block>168</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>160</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>160</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>156</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>157</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>158</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>159</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>160</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>161</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>162</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>186</index><block>169</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::decodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>373</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>375</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='170'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>376</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>376</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::cleanDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>534</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>536</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>536</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>537</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::cleanDirectoryOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>379</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_encoding_badEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>381</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>380</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>383</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>384</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>382</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::cleanDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>385</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testIO466(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>387</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>389</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>391</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>392</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testIO466(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>390</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>393</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testIO466(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>394</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>315</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>172</index><block>320</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>303</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>305</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>307</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>308</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>310</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>311</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>313</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>315</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>316</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><block>317</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>318</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><block>321</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><block>319</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>168</index><block>320</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyFile</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><block>216</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><block>217</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>217</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>221</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIncorrectOutputSize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>213</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>214</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>216</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>217</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><block>219</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>405</index><block>266</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>436</index><block>268</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>524</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>526</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>527</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>525</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::deleteDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>531</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>532</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::deleteDirectoryOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>533</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIO276(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>544</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>545</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>547</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>548</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdirParent</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>551</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdirParent</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>2511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>553</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::forceMkdir</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>6</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>7</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>10</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><block>13</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>10</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/io/File;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>14</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getTempDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>16</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getTempDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getTempDirectoryPath</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getTempDirectoryPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getUserDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>18</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getUserDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getUserDirectoryPath</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getUserDirectoryPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>57</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><block>61</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>56</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>57</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>58</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>59</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>60</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::innerListFiles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>605</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>601</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>603</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>605</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>604</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>607</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>593</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>595</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>597</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>2756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>598</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>2759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>600</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>620</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>616</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>618</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>620</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>619</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>2848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>622</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>608</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>610</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>2807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>612</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>2823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>613</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>2826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>615</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>3104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>701</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>3107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>703</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>iterateFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>75</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIterateFiles(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::iterateFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>iterateFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Iterator;</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>85</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::iterateFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>iterateFilesAndDirs</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;</methodDescription><lineNumber>650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>76</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::iterateFilesAndDirs to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>464</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>461</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>460</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>462</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>463</block><killingTest/><description>removed call to java/lang/Exception::addSuppressed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>63</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFiles(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>63</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::validateListFilesParameters</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>63</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFiles(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::innerListFiles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>80</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>82</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>84</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFilesAndDirs</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>73</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFilesAndDirs</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>74</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::listFilesAndDirs to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFilesAndDirs</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>73</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::validateListFilesParameters</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFilesAndDirs</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>74</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::innerListFiles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>638</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>640</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>642</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>644</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>646</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>648</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>649</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>651</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>651</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>651</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::deleteDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>654</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>656</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>658</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>659</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>660</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>662</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>664</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>665</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>667</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>669</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>671</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>3000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>673</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>3003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>675</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>677</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>3009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>678</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>3008</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>678</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>681</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>683</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>685</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>686</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>687</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>689</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>691</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>692</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>694</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>696</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>698</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>699</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveDirectoryToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>3080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>700</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>19</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>22</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>25</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::openInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::openOutputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='100'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>27</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>28</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>30</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='97'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>32</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='96'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>34</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;Z)Ljava/io/FileOutputStream;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>91</index><block>36</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::openOutputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToByteArray</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>434</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToByteArray</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>434</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/lang/String;</methodDescription><lineNumber>1838</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>433</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readFileToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>432</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readFileToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/util/List;</methodDescription><lineNumber>1901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>459</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>1886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>458</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>setUpEffectiveDirFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>70</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>setUpEffectiveDirFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>72</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::setUpEffectiveDirFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>setUpEffectiveFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>69</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::setUpEffectiveFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>554</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>556</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>557</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>558</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>574</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>575</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>576</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>559</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>561</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>562</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfAsBigInteger to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>563</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfAsBigInteger to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>585</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>586</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfBig0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>587</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfBig0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>564</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOfDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>564</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::checkDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>567</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>569</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><block>572</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>569</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>565</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>567</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>568</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>569</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>566</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOfDirectory0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory0</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>2629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>573</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOfDirectory0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>577</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfDirectoryAsBigInteger to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryAsBigInteger</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>577</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::checkDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>580</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><block>583</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>578</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>580</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>581</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>579</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfDirectoryBig0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectoryBig0</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/math/BigInteger;</methodDescription><lineNumber>2685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>584</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::sizeOfDirectoryBig0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>152</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>153</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>154</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>155</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>173</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>170</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>171</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>173</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>174</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>175</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>172</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles3a(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>178</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>77</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>77</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>79</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toSuffixes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>179</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs3a(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>179</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs3a(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>181</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs3a(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toURLs to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>51</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>52</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>52</block><killingTest/><description>removed call to java/io/FileOutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>validateListFilesParameters</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>64</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>validateListFilesParameters</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>66</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>verifiedListFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>1739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>401</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>verifiedListFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>403</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>verifiedListFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>405</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>verifiedListFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>1753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>407</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileUtils::verifiedListFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>409</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>408</block><killingTest/><description>Replaced long multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>408</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>409</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>408</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>409</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>410</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitForInterrupted(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>411</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>109</index><block>420</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>412</block><killingTest/><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>411</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitForInterrupted(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;)V</methodDescription><lineNumber>2078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>482</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V</methodDescription><lineNumber>2121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>485</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;Z)V</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>489</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>484</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V</methodDescription><lineNumber>2137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>486</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V</methodDescription><lineNumber>2138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>488</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Z)V</methodDescription><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>483</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[B)V</methodDescription><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>490</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeByteArrayToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[BII)V</methodDescription><lineNumber>2203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>492</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeByteArrayToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[BIIZ)V</methodDescription><lineNumber>2223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>493</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[BZ)V</methodDescription><lineNumber>2186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>491</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeByteArrayToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;)V</methodDescription><lineNumber>2244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>505</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>2314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>509</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V</methodDescription><lineNumber>2335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>510</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Z)V</methodDescription><lineNumber>2263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>506</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>2277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>507</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>2352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>522</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;Z)V</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>523</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;Z)V</methodDescription><lineNumber>2293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>508</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>2048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>480</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>1999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>466</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V</methodDescription><lineNumber>2035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>479</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>465</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V</methodDescription><lineNumber>2016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>467</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)V</methodDescription><lineNumber>2064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>481</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>61</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>63</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>69</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>61</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>63</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>65</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>67</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>69</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>62</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>64</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>66</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>68</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>70</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>71</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>72</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>74</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>76</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>75</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>77</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>directoryContains</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>78</block><killingTest>org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(org.apache.commons.io.FileUtilsDirectoryContainsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>168</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>170</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>174</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>179</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>178</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>166</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>168</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>170</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>171</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>174</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>176</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>178</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>167</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>169</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>172</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>173</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>175</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>179</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>157</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>159</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>160</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>161</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>159</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>155</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>157</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>159</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>160</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>161</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>156</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>158</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>162</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>163</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>163</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>20</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>24</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><block>28</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>184</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>260</index><block>39</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>329</index><block>48</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>411</index><block>53</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>421</index><block>55</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><block>28</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>167</index><block>31</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>171</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>240</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -2 to 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>243</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>247</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>371</index><block>51</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>405</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>22</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>27</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>28</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>30</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>32</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>34</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>35</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>36</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>37</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>39</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>41</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>42</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><block>43</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><block>44</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><block>45</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><block>47</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>48</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><block>50</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>391</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>393</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><block>52</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>456</index><block>60</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>20</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>22</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>24</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>25</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>27</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>28</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>29</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>30</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><block>32</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><block>33</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>198</index><block>34</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><block>35</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>210</index><block>36</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>37</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><block>39</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><block>40</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>274</index><block>41</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>281</index><block>42</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>286</index><block>43</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>293</index><block>44</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>301</index><block>45</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>313</index><block>47</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>329</index><block>48</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>336</index><block>49</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>411</index><block>53</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>421</index><block>55</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>435</index><block>57</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>437</index><block>58</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>19</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>21</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>305</index><block>46</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>415</index><block>54</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>430</index><block>56</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>446</index><block>59</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>458</index><block>60</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>18</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>22</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/String::getChars</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>161</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>237</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>350</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>385</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>199</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>203</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>204</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>205</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>206</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>209</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>210</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>211</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>213</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>208</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>214</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsNormalized</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>201</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsNormalizedOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>202</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>200</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>failIfNullBytePresent</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>183</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>failIfNullBytePresent</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><block>186</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>failIfNullBytePresent</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>183</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>failIfNullBytePresent</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>184</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getBaseName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>188</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getBaseName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>193</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>189</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>191</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>190</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>192</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>193</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>164</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getFullPathNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>165</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getFullPathNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>182</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>180</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testInjectionFailure(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>181</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>182</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>182</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testInjectionFailure(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>153</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPathNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>154</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPathNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>148</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>150</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>146</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>148</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>150</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>147</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>149</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>151</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>152</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>151</block><killingTest/><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>152</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>114</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>115</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>107</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>112</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><block>134</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>92</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>94</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>96</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>98</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>99</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>101</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>104</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>105</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>106</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>108</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>110</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>113</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>114</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>115</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><block>116</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>117</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><block>120</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><block>123</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><block>124</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>125</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>126</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><block>127</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>235</index><block>128</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>130</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><block>132</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>281</index><block>135</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>93</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>95</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>97</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>100</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>103</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>107</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>136</index><block>112</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>176</index><block>118</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>181</index><block>119</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>191</index><block>121</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>196</index><block>122</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>240</index><block>129</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>275</index><block>134</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>289</index><block>137</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>143</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>141</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>143</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>142</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>145</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>138</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>139</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>140</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>215</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension_injection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>217</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>218</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>219</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>216</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>221</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>222</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>217</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension_injection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>235</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>237</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>238</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>239</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>243</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>236</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>241</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>244</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>246</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>237</block><killingTest/><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>230</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><block>233</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>223</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>225</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>226</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>227</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>230</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>231</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>224</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>229</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>232</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>234</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>225</block><killingTest/><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>7</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSystemWindows</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSystemWindows</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>8</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>11</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>12</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalizeNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>15</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalizeNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>194</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>196</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>195</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>197</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>198</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>196</block><killingTest/><description>removed call to org/apache/commons/io/FilenameUtils::failIfNullBytePresent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>87</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>89</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>88</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>90</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>91</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>79</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>80</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>81</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToUnix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>82</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToUnix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>83</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>84</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>85</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToWindows to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>86</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToWindows to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>281</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><block>289</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>278</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>279</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.star(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>281</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>282</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>283</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>284</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>285</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>287</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>290</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>280</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.noPattern(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::splitOnTokens to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>154</index><block>291</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::splitOnTokens to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>285</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>247</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>256</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><block>257</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>259</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>183</index><block>268</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>256</index><block>276</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>101</index><block>259</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>234</index><block>272</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>263</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>268</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>272</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>249</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>250</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>252</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>253</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>255</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>256</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>257</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>258</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>259</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>262</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>263</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>265</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><block>266</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>268</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>213</index><block>270</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>242</index><block>273</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>274</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>256</index><block>276</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>251</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>254</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>250</index><block>275</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>260</index><block>277</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatchOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>248</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>54</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>56</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>58</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>59</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>61</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)Ljava/io/BufferedInputStream;</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>63</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>44</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>46</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>48</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>49</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>51</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)Ljava/io/BufferedOutputStream;</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>53</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/io/BufferedReader;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>32</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/io/BufferedReader;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>34</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Reader;I)Ljava/io/BufferedReader;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>35</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Reader;I)Ljava/io/BufferedReader;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>37</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Writer;)Ljava/io/BufferedWriter;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>38</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Writer;)Ljava/io/BufferedWriter;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>40</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Writer;I)Ljava/io/BufferedWriter;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>41</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>buffer</mutatedMethod><methodDescription>(Ljava/io/Writer;I)Ljava/io/BufferedWriter;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>43</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::buffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Ljava/net/URLConnection;)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Ljava/net/URLConnection;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTest/><description>removed call to java/net/HttpURLConnection::disconnect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='166'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>7</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_fileName_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='143'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='34'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='148'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>6</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Writer;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/ServerSocket;)V</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>21</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocket(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/ServerSocket;)V</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>22</block><killingTest/><description>removed call to java/net/ServerSocket::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/Socket;)V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>15</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Socket(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/Socket;)V</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>16</block><killingTest/><description>removed call to java/net/Socket::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/nio/channels/Selector;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>18</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/nio/channels/Selector;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>19</block><killingTest/><description>removed call to java/nio/channels/Selector::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>([Ljava/io/Closeable;)V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>12</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>([Ljava/io/Closeable;)V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>13</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>([Ljava/io/Closeable;)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>([Ljava/io/Closeable;)V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>([Ljava/io/Closeable;)V</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>283</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>285</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>286</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>287</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>288</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>291</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>284</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>289</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>2741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>293</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>294</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>296</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>297</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>300</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>295</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>298</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>302</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>303</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>305</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>306</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>307</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>309</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>310</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>304</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEqualsIgnoreEOL</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>2809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>313</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='43'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>240</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>240</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>2248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>241</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>2250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>242</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>2270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>243</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/Writer;)V</methodDescription><lineNumber>2419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>259</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>2468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>261</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;)V</methodDescription><lineNumber>2636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>280</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>2699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>282</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>281</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='63'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>2494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>262</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>2494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>262</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>2495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>263</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>2497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>264</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>2291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>244</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ)J</methodDescription><lineNumber>2347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>248</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>249</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>252</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>253</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>254</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>256</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>256</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>257</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>249</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>250</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>252</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>253</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>254</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>255</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>256</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>251</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>258</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>250</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::skipFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J</methodDescription><lineNumber>2390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>256</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J</methodDescription><lineNumber>2316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>246</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J</methodDescription><lineNumber>2314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>245</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J</methodDescription><lineNumber>2318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>247</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J</methodDescription><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>246</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)J</methodDescription><lineNumber>2516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>265</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ)J</methodDescription><lineNumber>2565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>269</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>270</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>273</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>274</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>275</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>277</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>277</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>278</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>270</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>271</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>273</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>274</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>275</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>276</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>277</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>272</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>279</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>271</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::skipFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J</methodDescription><lineNumber>2603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>277</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;[C)J</methodDescription><lineNumber>2539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>267</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;[C)J</methodDescription><lineNumber>2537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>266</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;[C)J</methodDescription><lineNumber>2541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>268</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;[C)J</methodDescription><lineNumber>2538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>267</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>180</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>179</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>178</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>3099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>365</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>358</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>360</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>361</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>361</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>363</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>364</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>358</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>360</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>361</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>3083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>364</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[C)I</methodDescription><lineNumber>3052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>357</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>350</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>352</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>353</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>353</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>355</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>356</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>350</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>352</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>353</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)I</methodDescription><lineNumber>3036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>356</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I</methodDescription><lineNumber>3117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>366</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I</methodDescription><lineNumber>3123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>370</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I</methodDescription><lineNumber>3117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>366</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I</methodDescription><lineNumber>3119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>367</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I</methodDescription><lineNumber>3123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>370</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>3223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>379</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readFully to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>3222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>379</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::readFully</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)V</methodDescription><lineNumber>3203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>378</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::readFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)V</methodDescription><lineNumber>3184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>375</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/Reader;[C)V</methodDescription><lineNumber>3163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>374</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::readFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/Reader;[CII)V</methodDescription><lineNumber>3144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>371</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V</methodDescription><lineNumber>3241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>380</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/List;</methodDescription><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>172</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>174</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/util/List;</methodDescription><lineNumber>1416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>173</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/util/List;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>175</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/util/List;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>177</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>1311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>164</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtSubPackage(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/ClassLoader;)[B</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>165</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToString</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>162</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtSubPackage(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToString</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;Ljava/lang/ClassLoader;)Ljava/lang/String;</methodDescription><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>163</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtSubPackage_WithClassLoader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToURL</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/net/URL;</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>166</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtSubPackage(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToURL to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToURL</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;</methodDescription><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>167</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToURL_NonExistingResource(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToURL</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;</methodDescription><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>169</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToURL_NonExistingResource_WithClassLoader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>resourceToURL</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;</methodDescription><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>171</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::resourceToURL to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>314</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>317</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>318</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>320</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>321</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>314</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>316</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>317</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>318</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>2854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>321</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>329</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>332</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>333</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>335</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>336</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>329</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>331</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>332</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>333</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>2929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>336</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>322</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>324</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>327</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>328</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>322</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>324</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>325</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)J</methodDescription><lineNumber>2884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>328</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>2952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>337</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>2952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>337</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>2956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>339</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/Reader;J)V</methodDescription><lineNumber>3002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>347</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)V</methodDescription><lineNumber>2972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>342</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)V</methodDescription><lineNumber>2972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>342</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/nio/channels/ReadableByteChannel;J)V</methodDescription><lineNumber>2976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>344</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)Ljava/io/InputStream;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>25</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedReader</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/io/BufferedReader;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedReader</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/io/BufferedReader;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>28</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toBufferedReader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedReader</mutatedMethod><methodDescription>(Ljava/io/Reader;I)Ljava/io/BufferedReader;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedReader</mutatedMethod><methodDescription>(Ljava/io/Reader;I)Ljava/io/BufferedReader;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>31</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toBufferedReader to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>78</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>82</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>83</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>84</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>78</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>80</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>82</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>83</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>85</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>81</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)[B</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>87</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)[B</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>75</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)[B</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>75</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeLong(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)[B</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>77</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;)[B</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>88</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/lang/String;)[B</methodDescription><lineNumber>894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>100</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/nio/charset/Charset;)[B</methodDescription><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>89</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>101</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/net/URI;)[B</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>102</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_URI(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/net/URL;)[B</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>103</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToByteArray_URL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/net/URL;)[B</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>103</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[C</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>116</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)[C</methodDescription><lineNumber>1025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>118</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)[C</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>117</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)[C</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>117</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/Reader;)[C</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>119</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/InputStream;</methodDescription><lineNumber>1585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>181</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>1618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>183</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Ljava/io/InputStream;</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>182</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>1634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>184</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>1668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>186</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/io/InputStream;</methodDescription><lineNumber>1647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>185</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToInputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>120</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>132</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>121</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/net/URI;)Ljava/lang/String;</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>144</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URI(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>146</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/net/URI;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>145</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/lang/String;</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>147</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URL(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>159</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>160</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>161</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>209</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>212</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>210</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>211</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/Writer;)V</methodDescription><lineNumber>1904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>207</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/Writer;)V</methodDescription><lineNumber>1905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>208</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>2007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>215</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>2049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>218</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>216</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>217</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>213</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>214</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>221</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>2115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>222</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>223</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;)V</methodDescription><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>219</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;)V</methodDescription><lineNumber>2069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>220</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>187</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>188</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;)V</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>193</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>1777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>196</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>194</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>195</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;)V</methodDescription><lineNumber>1842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>203</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>206</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>204</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>1862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>205</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>197</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>198</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>190</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>191</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>191</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>189</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>190</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>191</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>200</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>201</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>201</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>199</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>200</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeChunked</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>1817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>201</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>2139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>224</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>232</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>225</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>227</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>229</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testTwoLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>230</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testTwoLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>230</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>2209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>233</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>2212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>235</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>2216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>237</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>2217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>238</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>2219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>238</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>32</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>34</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedDouble</mutatedMethod><methodDescription>(Ljava/io/InputStream;)D</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>31</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedDouble</mutatedMethod><methodDescription>([BI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>17</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedFloat</mutatedMethod><methodDescription>(Ljava/io/InputStream;)F</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedFloat</mutatedMethod><methodDescription>([BI)F</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>15</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>22</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>22</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>10</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>25</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>25</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>27</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>13</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>13</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>13</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>13</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>13</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>19</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>7</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>7</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>23</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedUnsignedInteger</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>11</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>11</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedUnsignedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>20</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>20</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>20</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>20</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>20</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>20</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>8</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapDouble</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>5</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::swapDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapFloat</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::swapFloat</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>2</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>3</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>3</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::swapLong</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetry(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedDouble</mutatedMethod><methodDescription>(Ljava/io/OutputStream;D)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>30</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedDouble</mutatedMethod><methodDescription>([BID)V</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>16</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedFloat</mutatedMethod><methodDescription>(Ljava/io/OutputStream;F)V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedFloat</mutatedMethod><methodDescription>([BIF)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>14</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedInteger</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>21</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>9</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>9</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>24</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>12</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>12</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>18</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>6</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>6</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/net/URLConnection;Ljava/lang/String;)V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/net/URLConnection;Ljava/lang/String;)V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>72</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>73</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>75</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>76</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>78</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>79</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>81</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>84</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>85</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>86</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><block>89</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><block>90</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>91</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>234</index><block>94</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><block>95</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><block>96</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><block>99</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>298</index><block>100</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>302</index><block>101</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>74</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>93</index><block>80</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>108</index><block>83</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>168</index><block>88</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>187</index><block>92</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>287</index><block>98</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>306</index><block>102</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>351</index><block>104</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>33</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>34</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>35</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>38</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>39</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>40</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>43</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>44</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>45</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>47</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>51</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>52</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>53</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>54</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><block>56</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><block>57</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><block>58</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>240</index><block>61</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>62</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><block>63</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>253</index><block>64</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>66</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>291</index><block>67</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>295</index><block>68</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>37</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>41</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>42</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>137</index><block>50</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>233</index><block>60</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>329</index><block>70</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>15</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>21</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>20</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doHttpStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>22</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doHttpStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>27</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>28</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>29</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>26</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doLenientDetection to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>31</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doLenientDetection to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>17</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>16</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doRawStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>18</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doRawStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>110</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>111</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>109</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeEncoding(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>110</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeEncoding(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>111</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeEncoding(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>113</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeEncoding(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>115</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeEncoding(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getContentTypeEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>106</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>105</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeMime(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>106</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeMime(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>108</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testContentTypeMime(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getContentTypeMime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getDefaultEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getDefaultEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>119</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><block>125</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>120</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>120</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>126</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>129</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>116</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>117</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>118</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>119</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>121</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>122</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>125</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>126</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>128</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>216</index><block>129</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getXmlProlog to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>117</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>126</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>130</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>131</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>132</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>133</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>134</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>135</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>137</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testAppXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>138</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>139</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>140</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>141</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>142</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>144</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpace</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>5</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>9</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>10</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>12</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>45</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>47</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>49</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>155</index><block>51</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>41</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>45</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>47</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>49</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>50</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>155</index><block>51</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>225</index><block>54</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceUnix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>17</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>19</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>15</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>17</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>18</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>19</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>20</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>21</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceWindows</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>openProcess</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Process;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>73</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileSystemUtils::openProcess to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>55</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>55</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>57</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::parseBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>24</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><block>36</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>27</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>33</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>145</index><block>39</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>24</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>26</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>32</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>24</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>25</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>28</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>29</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>30</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>31</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>34</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>36</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>37</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>38</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>161</index><block>40</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::parseDir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>59</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>60</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>62</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><block>64</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>66</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><block>67</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>275</index><block>68</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>228</index><block>69</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileSystemUtils::performCommand to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>62</block><killingTest/><description>removed call to org/apache/commons/io/ThreadMonitor::stop</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><block>66</block><killingTest/><description>removed call to java/io/BufferedReader::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>66</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>67</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>191</index><block>68</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>212</index><block>68</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>216</index><block>68</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>259</index><block>68</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>263</index><block>68</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>279</index><block>69</block><killingTest/><description>removed call to java/lang/Process::destroy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>3</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>6</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>7</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>7</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>10</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='126'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='126'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>10</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.defaultConstructor(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>10</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='261'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>8</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>33</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>35</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>35</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>41</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;I)Ljava/io/InputStream;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>42</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='164'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>53</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='164'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>53</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='165'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>50</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='164'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>53</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>51</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='164'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>56</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='164'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>53</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>46</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>43</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>46</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>44</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>49</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>57</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>58</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>59</block><killingTest>org.apache.commons.io.DemuxTestCase.testOutputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>25</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='87'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>26</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>26</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>25</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='87'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>26</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>29</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>27</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>30</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>29</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>14</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>15</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>14</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>15</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>19</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>19</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.defaultConstructor(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>20</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>14</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>15</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>17</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>19</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='144'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>21</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>37</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>37</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>37</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>6</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>10</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>addListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>28</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>30</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>32</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>33</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onStop</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>35</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>37</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>38</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>39</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><block>41</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><block>45</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>40</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>122</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><block>44</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>170</index><block>46</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>35</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>37</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>38</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>39</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>41</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>42</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>45</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>40</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>132</index><block>44</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><block>44</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><block>46</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><block>47</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>48</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::createFileEntry to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>48</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>58</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>59</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>55</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>58</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>56</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>57</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>59</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>68</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>69</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>70</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileDelete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doListFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>49</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doListFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>51</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doListFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>49</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doListFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>51</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doListFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>53</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::doListFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>61</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>63</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>64</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryChange</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>65</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileChange</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>getDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::getDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>getFileFilter</mutatedMethod><methodDescription>()Ljava/io/FileFilter;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::getFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>getListeners</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::getListeners to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>25</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>77</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>72</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>73</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>75</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>76</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>77</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>78</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>78</block><killingTest/><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>removeListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>20</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>removeListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>79</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>80</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>49</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>50</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>53</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>51</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>52</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>and</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>35</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::and to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>andFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>33</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::andFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>asFileFilter</mutatedMethod><methodDescription>(Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>47</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::asFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>asFileFilter</mutatedMethod><methodDescription>(Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>48</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::asFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>directoryFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::directoryFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>falseFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>46</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::falseFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>fileFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::fileFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>11</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>8</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>10</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterList</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>12</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterList</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterSet</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterSet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterSet</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterSet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>58</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>59</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>([B)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>60</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>61</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>62</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>63</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeCVSAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>64</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeCVSAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>68</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>69</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeDirectoryOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>70</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeDirectoryOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>71</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>72</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeFileOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>73</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeFileOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>65</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>66</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeSVNAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>67</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeSVNAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>nameFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>29</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::nameFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>nameFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>30</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::nameFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>notFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>44</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNot(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::notFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>or</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>36</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::or to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>orFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>34</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::orFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>prefixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::prefixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>prefixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::prefixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeFileFilter</mutatedMethod><methodDescription>(J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>55</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeFileFilter</mutatedMethod><methodDescription>(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>56</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeRangeFileFilter</mutatedMethod><methodDescription>(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>57</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeRangeFileFilter</mutatedMethod><methodDescription>(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>57</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeRangeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>suffixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>27</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::suffixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>suffixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>28</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::suffixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>39</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>37</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>39</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>40</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::toList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>trueFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>45</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::trueFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>removed call to java/util/Collections::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>33</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>34</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>36</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>17</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>18</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='25'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>18</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>17</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>18</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>21</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>22</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>23</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>114</index><block>25</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::getBOM to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOMCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>26</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOMCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>28</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::getBOMCharsetName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>9</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>10</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>12</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>13</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>15</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>55</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>57</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>37</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>37</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>38</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>39</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>41</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>42</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>42</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='51'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>44</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>54</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>45</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>46</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>47</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>49</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>50</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>53</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>45</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>46</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>47</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>49</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>50</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>53</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>29</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>30</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>29</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>31</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>58</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>59</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>60</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>61</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>62</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>63</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>63</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.skipReturnValueWithoutBom(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>60</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>61</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>63</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.skipReturnValueWithoutBom(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/BOMInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)V</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::init</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>9</block><killingTest/><description>removed call to java/lang/Thread::setDaemon</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>9</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>13</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>12</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>10</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZI)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>7</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZ)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>11</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>8</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>getDelay</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>16</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/Tailer::getDelay</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>getRun</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>65</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>153</index><block>70</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>66</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEndOfFileReached(org.apache.commons.io.input.TailerTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>66</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>70</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>70</block><killingTest>org.apache.commons.io.input.TailerTest.testIO335(org.apache.commons.io.input.TailerTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>63</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>64</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>65</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>67</block><killingTest>org.apache.commons.io.input.TailerTest.testIO335(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>69</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>72</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEndOfFileReached(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>66</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>66</block><killingTest/><description>removed call to java/io/ByteArrayOutputStream::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>68</block><killingTest>org.apache.commons.io.input.TailerTest.testIO335(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>70</block><killingTest>org.apache.commons.io.input.TailerTest.testIO335(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>70</block><killingTest>org.apache.commons.io.input.TailerTest.testIO335(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::reset</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><block>70</block><killingTest/><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><block>72</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>179</index><block>73</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEndOfFileReached(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListenerAdapter::endOfFileReached</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>26</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>242</index><block>41</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>17</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>20</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>22</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>25</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>26</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>242</index><block>41</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><block>43</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>44</block><killingTest>org.apache.commons.io.input.TailerTest.testTailerEof(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><block>45</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>304</index><block>46</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>307</index><block>47</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>374</index><block>49</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>20</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::fileNotFound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>21</block><killingTest>org.apache.commons.io.input.TailerTest.testInterrupt(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>24</block><killingTest/><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>27</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::fileRotated</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><block>28</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>227</index><block>40</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::fileNotFound</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>232</index><block>40</block><killingTest/><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>269</index><block>44</block><killingTest/><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>293</index><block>46</block><killingTest/><description>removed call to java/io/RandomAccessFile::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>299</index><block>46</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>321</index><block>48</block><killingTest/><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>334</index><block>50</block><killingTest/><description>removed call to java/io/RandomAccessFile::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>353</index><block>51</block><killingTest/><description>removed call to org/apache/commons/io/input/Tailer::stop</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>364</index><block>52</block><killingTest/><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>370</index><block>52</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>392</index><block>51</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>410</index><block>55</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>2</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>2</block><killingTest/><description>Replaced long multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>6</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>3</block><killingTest/><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>6</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>createLeftOver</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>createLeftOver</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>29</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>createLeftOver</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>createLeftOver</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>30</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>33</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>37</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><block>40</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>33</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>34</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>34</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>34</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>37</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>32</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>38</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>39</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>getNewLineMatchByteCount</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>93</index><block>41</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>21</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>21</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>21</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>23</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>24</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>17</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>175</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ReversedLinesFileReader$FilePart::readLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>19</block><killingTest/><description>removed call to org/apache/commons/io/input/ReversedLinesFileReader$FilePart::createLeftOver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>23</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>25</block><killingTest/><description>removed call to org/apache/commons/io/input/ReversedLinesFileReader$FilePart::createLeftOver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>10</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>10</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ReversedLinesFileReader$FilePart::rollOver to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader$FilePart</mutatedClass><mutatedMethod>rollOver</mutatedMethod><methodDescription>()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>13</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ReversedLinesFileReader$FilePart::rollOver to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>0</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>0</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>38</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>38</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>6</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>7</block><killingTest/><description>removed call to java/nio/charset/CoderResult::throwException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>48</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>29</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>28</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>30</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>29</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>32</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>30</block><killingTest/><description>removed call to org/apache/commons/io/input/CharSequenceInputStream::fillBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>33</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>11</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>11</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>11</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>15</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>16</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>24</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>14</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>17</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>159</index><block>27</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>21</block><killingTest/><description>removed call to org/apache/commons/io/input/CharSequenceInputStream::fillBuffer</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>41</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>42</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>45</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>44</block><killingTest/><description>removed call to org/apache/commons/io/input/CharSequenceInputStream::fillBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>34</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>35</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>36</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>36</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>34</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>35</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CharSequenceInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>37</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CharSequenceInputStream::skip</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>6</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>41</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>43</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::getSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>processByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>39</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>18</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>16</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>17</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>18</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>19</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>24</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>22</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>24</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>23</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>25</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/NullInputStream::processBytes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>30</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>28</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>30</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>37</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>33</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>35</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>37</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>36</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>22</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>22</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>24</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/HexDump::dump to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>19</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>20</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>20</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>19</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>21</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/HexDump::dump to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>8</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><block>9</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>12</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>159</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>182</index><block>16</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>217</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 16 to -16</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>7</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>10</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>15</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>7</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>8</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>9</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>12</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>198</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>202</index><block>17</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>207</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_char(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.nullCharSequencec(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>7</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_charSequence(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>3</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>4</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_charSequence_offset(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_close(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_close(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_flush(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>21</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_flush(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>8</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.writeInt(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>9</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_int(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>15</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.nullString(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>16</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.writeString(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>17</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_string(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>18</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.writeStringPartial(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>19</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_string_offset(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.nullCharArray(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>11</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.writeCharArray(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>12</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_char_array(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>13</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.writeCharArrayPartial(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>14</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_offset_char_array(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>36</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>38</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::getSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>processChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>34</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>13</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>12</block><killingTest>org.apache.commons.io.input.NullReaderTest.testRead(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>13</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>19</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>17</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>19</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>18</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>removed call to org/apache/commons/io/input/NullReader::processChars</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>25</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>23</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>25</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>32</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>28</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>30</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>32</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>31</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>24</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>isPropagateClose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>28</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>26</block><killingTest/><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>5</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>11</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>14</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>7</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>10</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>12</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>14</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>25</block><killingTest/><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>16</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>17</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>17</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/BoundedInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>22</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/BoundedInputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>19</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>21</block><killingTest/><description>removed call to java/io/Reader::mark</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>22</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>10</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>17</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>23</block><killingTest/><description>removed call to java/io/Reader::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>15</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>16</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>37</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>12</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>fillBuffer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>33</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>32</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>33</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>36</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>34</block><killingTest/><description>removed call to org/apache/commons/io/input/ReaderInputStream::fillBuffer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>31</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>15</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>16</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>17</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>17</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>23</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>23</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>23</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>15</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>16</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>17</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>27</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>20</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>143</index><block>30</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/input/ReaderInputStream::fillBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>7</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>8</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>14</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>15</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>17</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>11</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>13</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>14</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>15</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>17</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>18</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>10</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>19</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>21</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>25</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>27</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>27</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>23</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>25</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>26</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CharSequenceReader::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>27</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CharSequenceReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/CharSequenceReader::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>5</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>checkIfCancelled</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>26</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>filterDirectoryContents</mutatedMethod><methodDescription>(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>34</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/DirectoryWalker::filterDirectoryContents to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>handleDirectory</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)Z</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>handleIsCancelled</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)Z</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>29</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>15</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>16</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>21</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><block>24</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>14</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>16</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>17</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>19</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>21</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>22</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleDirectoryStart</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>17</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleRestricted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>23</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::walk</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>131</index><block>24</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleFile</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>151</index><block>25</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleDirectoryEnd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><block>25</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>12</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::walk</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleEnd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>13</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>41</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>40</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>42</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteClosed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>43</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>consume</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>getObservers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/ObservableInputStream::getObservers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>noteClosed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>37</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream$Observer::closed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>noteDataByte</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>31</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream$Observer::data</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>noteDataBytes</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>25</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream$Observer::data</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>noteError</mutatedMethod><methodDescription>(Ljava/io/IOException;)V</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>34</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream$Observer::error</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>noteFinished</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>28</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream$Observer::finished</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>7</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>9</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>8</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteFinished</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteDataByte</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>13</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>15</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>16</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteFinished</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>16</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteDataBytes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>18</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>20</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>22</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>23</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>19</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>21</block><killingTest/><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteFinished</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>23</block><killingTest>org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(org.apache.commons.io.input.ObservableInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ObservableInputStream::noteDataBytes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ObservableInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ObservableInputStream</mutatedClass><mutatedMethod>removeAllObservers</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>10</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>12</block><killingTest>org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(org.apache.commons.io.comparator.PathFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>15</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>20</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>27</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>28</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>31</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>27</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>28</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>30</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>32</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkRegionMatches</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>33</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkRegionMatches</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>35</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkStartsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkStartsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>0</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>3</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>1</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::forName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_getName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>isCaseSensitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>readResolve</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOCase::readResolve to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>36</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_toString(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>1</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>9</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>9</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>164</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>12</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>13</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>17</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>23</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><block>23</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>13</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>14</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>15</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>16</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>21</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>13</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/StringWriter::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><block>22</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><block>23</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>11</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>getDefaultEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/XmlStreamWriter::getDefaultEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/XmlStreamWriter::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>25</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/XmlStreamWriter::detectEncoding</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>26</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>6</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>17</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>15</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>17</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>18</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>16</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>19</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>21</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='62'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>9</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.getBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.getBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.getBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::getBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::getCharsetName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>22</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><block>23</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>23</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>22</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>24</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='62'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>length</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>25</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>26</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>27</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>25</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>26</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>28</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>13</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>14</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='78'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>16</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>20</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testSkip(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testEOF1(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>4</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>7</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testSkipping(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='21'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>9</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testResetting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>10</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>19</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>11</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testSkip(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>12</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::checkIbmJdkWithBrokenUTF16</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>25</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><block>30</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>26</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>23</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>25</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>26</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>checkIbmJdkWithBrokenUTF16</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>31</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::processInput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>14</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testFlush(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>13</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>22</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>17</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>12</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>11</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::write</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>9</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::processInput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>10</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/util/regex/Pattern;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>24</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptPattern(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::accept to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/apache/commons/io/serialization/ClassNameMatcher;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>26</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptCustomMatcher(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::accept to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>12</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>13</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>12</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>14</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::accept to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>19</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>20</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::accept to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>(Ljava/util/regex/Pattern;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>25</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::reject to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>(Lorg/apache/commons/io/serialization/ClassNameMatcher;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>27</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectCustomMatcher(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::reject to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>15</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>16</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>15</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>17</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::reject to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>21</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>22</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>21</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>reject</mutatedMethod><methodDescription>([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>23</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::reject to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>resolveClass</mutatedMethod><methodDescription>(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>11</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/serialization/ValidatingObjectInputStream::resolveClass to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>resolveClass</mutatedMethod><methodDescription>(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>11</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/serialization/ValidatingObjectInputStream::validateClassName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>validateClassName</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>validateClassName</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>5</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>validateClassName</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>8</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectOnly(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>validateClassName</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/serialization/ValidatingObjectInputStream::invalidClassNameFound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ValidatingObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.ValidatingObjectInputStream</mutatedClass><mutatedMethod>validateClassName</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>9</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectOnly(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/serialization/ValidatingObjectInputStream::invalidClassNameFound</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>28</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>28</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>22</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>23</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>25</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>21</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>24</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>26</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>27</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>12</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>14</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>16</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>17</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>11</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>13</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>15</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>18</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>19</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>7</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>WindowsLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.WindowsLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.WindowsLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>21</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>19</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>20</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>22</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>32</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/SuffixFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>21</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>19</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>20</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>22</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>32</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/NameFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/AndFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/AndFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>12</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>15</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>getFileFilters</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/AndFileFilter::getFileFilters to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>removeFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>setFileFilters</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>32</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/AndFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>32</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/WildcardFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>32</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/PrefixFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>26</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>26</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>20</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>21</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>23</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>22</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>24</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>eofGame</mutatedMethod><methodDescription>(Z)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>25</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>10</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>12</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>14</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>16</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>17</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>11</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>13</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>15</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>18</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>19</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>7</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>UnixLineEndingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.UnixLineEndingInputStream</mutatedClass><mutatedMethod>readWithUpdate</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(org.apache.commons.io.input.UnixLineEndingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>199</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>228</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>18</block><killingTest/><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>19</block><killingTest/><description>Replaced long division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>19</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>20</block><killingTest/><description>Replaced long division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/nio/charset/Charset;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>228</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>29</block><killingTest/><description>removed call to java/io/RandomAccessFile::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReversedLinesFileReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReversedLinesFileReader</mutatedClass><mutatedMethod>readLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ReversedLinesFileReader::readLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getChildren</mutatedMethod><methodDescription>()[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getChildren</mutatedMethod><methodDescription>()[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>25</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getChildren to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>27</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLastModified</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>30</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileEntry::getLastModified</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>32</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileEntry::getLength</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>22</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>22</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getParent</mutatedMethod><methodDescription>()Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>19</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getParent to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>36</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>isExists</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>newChildInstance</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::newChildInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>12</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>13</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>15</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>112</index><block>17</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.closeTest(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>removed call to java/io/Reader::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.skipTest(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>6</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>7</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.skipTest(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>6</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>8</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>9</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.shortReader(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>10</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.skipTest(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>15</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.testReadBytesEOF(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>15</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.testReadBytesEOF(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>11</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.skipTest(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>16</block><killingTest>org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset(org.apache.commons.io.input.BoundedReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BoundedReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTest/><description>removed call to java/io/Reader::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationMonitor::addObserver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>addObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>getInterval</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileAlterationMonitor::getInterval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>getObservers</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationMonitor::getObservers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>removeObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>removeObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>32</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>34</block><killingTest/><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>19</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::initialize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>21</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationMonitor::stop</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>25</block><killingTest/><description>removed call to java/lang/Thread::join</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>26</block><killingTest/><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>27</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::destroy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>14</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::thresholdReached</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>6</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='118'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>4</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>getByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/output/ThresholdingOutputStream::getByteCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>getThreshold</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>11</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(org.apache.commons.io.output.ThresholdingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='91'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>12</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>12</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/OrFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/OrFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>13</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>18</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>19</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>21</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>getFileFilters</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testRemove(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/OrFileFilter::getFileFilters to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>removeFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>setFileFilters</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>28</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/OrFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='65'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/io/File;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='65'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/io/File;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='39'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>9</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='117'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>25</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='78'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>22</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>23</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getStream</mutatedMethod><methodDescription>()Ljava/io/OutputStream;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>isInMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='117'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>isInMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>20</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='65'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='65'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>15</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceMkdirParent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='65'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>15</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::writeTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>16</block><killingTest/><description>removed call to java/io/FileOutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>28</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>29</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall[initialBufferSize = 8](org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::writeTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>9</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>11</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceMkdir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceMkdir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/output/LockableFileWriter::testLockDir</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><block>12</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/LockableFileWriter::createLock</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>27</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>createLock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>19</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>createLock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>21</block><killingTest/><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>35</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>24</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/LockableFileWriter::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>testLockDir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>testLockDir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>16</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>30</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>33</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>34</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>31</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>32</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>2</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>22</block><killingTest/><description>removed call to java/io/BufferedReader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/LineIterator;)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/LineIterator;)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>25</block><killingTest/><description>removed call to org/apache/commons/io/LineIterator::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>7</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>9</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>11</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>8</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>10</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>12</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/LineIterator::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>15</block><killingTest/><description>removed call to java/io/IOException::addSuppressed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>isValidLine</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/LineIterator::next to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>nextLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testZeroLines(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>nextLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>20</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testValidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/LineIterator::nextLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readBoolean</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readBoolean</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readByte</mutatedMethod><methodDescription>()B</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readChar</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readDouble</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/input/SwappedDataInputStream::readDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFloat</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/input/SwappedDataInputStream::readFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/SwappedDataInputStream::readFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>12</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readInt</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>14</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readLong</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>16</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/SwappedDataInputStream::readLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readShort</mutatedMethod><methodDescription>()S</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readUnsignedByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>18</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readUnsignedShort</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>skipBytes</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>31</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>30</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>12</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>14</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>16</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>18</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>21</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>23</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_encoding_badEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>17</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_Charset_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/FileWriterWithEncoding::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>19</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_CharsetEncoder_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/FileWriterWithEncoding::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>20</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/FileWriterWithEncoding::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>22</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>23</block><killingTest/><description>removed call to java/lang/Exception::addSuppressed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>25</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>29</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>26</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>27</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>12</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>10</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>2</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(org.apache.commons.io.output.ProxyOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>7</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>17</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>163</index><block>36</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>37</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/MagicNumberFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>13</block><killingTest/><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.io.CopyUtilsTest.copy_readerToWriter(org.apache.commons.io.CopyUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>7</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.io.CopyUtilsTest.copy_readerToWriter(org.apache.commons.io.CopyUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>14</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>15</block><killingTest/><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>([BLjava/io/Writer;)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/CopyUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(org.apache.commons.io.CopyUtilsTest)</killingTest><description>removed call to org/apache/commons/io/CopyUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><block>14</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>8</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>9</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>14</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>13</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><block>15</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>100</index><block>16</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>17</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testToString(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/SizeFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/ThreadMonitor::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>sleep</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>sleep</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>8</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>sleep</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>8</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>sleep</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>8</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>sleep</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>8</block><killingTest/><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(J)Ljava/lang/Thread;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ThreadMonitor::start to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(Ljava/lang/Thread;J)Ljava/lang/Thread;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(Ljava/lang/Thread;J)Ljava/lang/Thread;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(Ljava/lang/Thread;J)Ljava/lang/Thread;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>2</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ThreadMonitor::start to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(Ljava/lang/Thread;J)Ljava/lang/Thread;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>2</block><killingTest/><description>removed call to java/lang/Thread::setDaemon</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>(Ljava/lang/Thread;J)Ljava/lang/Thread;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>2</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(Ljava/lang/Thread;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(org.apache.commons.io.ThreadMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ThreadMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.ThreadMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>(Ljava/lang/Thread;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>4</block><killingTest/><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.constructorIterable_order(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/util/Comparator;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/util/Comparator;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>11</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>12</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testSortList(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>13</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testToString(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>13</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.constructorIterable_Null(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CompositeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.CompositeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>16</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testToString(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/CompositeFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>addTracker</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>addTracker</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>addTracker</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>12</block><killingTest/><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>exitWhenFinished</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>exitWhenFinished</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>16</block><killingTest/><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>getDeleteFailures</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileCleaningTracker::getDeleteFailures to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>getTrackCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>removed call to org/apache/commons/io/FileCleaningTracker::addTracker</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>5</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>8</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>removed call to org/apache/commons/io/FileCleaningTracker::addTracker</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>afterRead</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testSkipping(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>afterRead</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>getByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CountingInputStream::getByteCount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>4</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>resetByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>11</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testResetting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CountingInputStream::resetByteCount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>7</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testResetting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testResetting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testSkipping(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.CountingInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testSkipping(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CountingInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>3</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>7</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testSkip(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testSkip(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>8</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testSkip(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>11</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>12</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>12</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>9</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>10</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TeeInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>10</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>5</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>4</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TeeOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TeeOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.io.output.TeeOutputStreamTest.testTee(org.apache.commons.io.output.TeeOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/FileFilter;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/FilenameFilter;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>8</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>10</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DelegateFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DelegateFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/DelegateFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>beforeWrite</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>getByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/output/CountingOutputStream::getByteCount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>resetByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>9</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/output/CountingOutputStream::resetByteCount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.CountingOutputStream</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JZ)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JZ)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SizeFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/SizeFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>delete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>delete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>7</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>11</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testToString(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileDeleteStrategy::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>5</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/StringBuilderWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>6</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/StringBuilderWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>7</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/StringBuilderWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>getBuilder</mutatedMethod><methodDescription>()Ljava/lang/StringBuilder;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/StringBuilderWriter::getBuilder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>15</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/StringBuilderWriter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>StringBuilderWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.StringBuilderWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>12</block><killingTest>org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(org.apache.commons.io.output.StringBuilderWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testSortList(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testSortList(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testSortList(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LastModifiedFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.LastModifiedFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.io.comparator.LastModifiedFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.LastModifiedFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>bindStream</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)Ljava/io/OutputStream;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.DemuxTestCase.testOutputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DemuxOutputStream::bindStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>bindStream</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)Ljava/io/OutputStream;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.io.DemuxTestCase.testOutputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>removed call to java/lang/InheritableThreadLocal::set</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>5</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>6</block><killingTest>org.apache.commons.io.DemuxTestCase.testOutputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DemuxOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>7</block><killingTest>org.apache.commons.io.DemuxTestCase.testOutputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/FileCleaningTracker;)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>0</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker$Reaper::setPriority</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/FileCleaningTracker;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>0</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker$Reaper::setDaemon</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(org.apache.commons.io.FileCleaningTrackerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Reaper</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker$Tracker::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>bindStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.DemuxTestCase.testInputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/DemuxInputStream::bindStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>bindStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.io.DemuxTestCase.testInputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>removed call to java/lang/InheritableThreadLocal::set</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.io.DemuxTestCase.testInputStream(org.apache.commons.io.DemuxTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemuxInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.DemuxInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Writer;I)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.negative_chunksize_not_permitted(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Writer;I)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>4</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(org.apache.commons.io.output.ChunkedWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/regex/Pattern;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>11</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RegexFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.RegexFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>14</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>exitWhenFinished</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker::exitWhenFinished</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/io/FileCleaningTracker;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>7</block><killingTest>org.apache.commons.io.FileCleanerTestCase.testFileCleanerFile(org.apache.commons.io.FileCleanerTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileCleaner::getInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>getTrackCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileCleaner.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaner</mutatedClass><mutatedMethod>track</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/FileCleaningTracker::track</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortListNull(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortListNull(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/AbstractFileComparator::sort to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>4</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortList(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>removed call to java/util/Collections::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortArrayNull(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortArrayNull(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/AbstractFileComparator::sort to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testSortArray(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.AbstractFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testToString(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/AbstractFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='25'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.negative_chunksize_not_permitted(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>4</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ChunkedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ChunkedOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(org.apache.commons.io.output.ChunkedOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>getCause</mutatedMethod><methodDescription>()Ljava/io/IOException;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>10</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/TaggedIOException::getCause to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>getTag</mutatedMethod><methodDescription>()Ljava/io/Serializable;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/TaggedIOException::getTag to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>isTaggedWith</mutatedMethod><methodDescription>(Ljava/lang/Throwable;Ljava/lang/Object;)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>isTaggedWith</mutatedMethod><methodDescription>(Ljava/lang/Throwable;Ljava/lang/Object;)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>isTaggedWith</mutatedMethod><methodDescription>(Ljava/lang/Throwable;Ljava/lang/Object;)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>isTaggedWith</mutatedMethod><methodDescription>(Ljava/lang/Throwable;Ljava/lang/Object;)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TaggedIOException.java</sourceFile><mutatedClass>org.apache.commons.io.TaggedIOException</mutatedClass><mutatedMethod>throwCauseIfTaggedWith</mutatedMethod><methodDescription>(Ljava/lang/Throwable;Ljava/lang/Object;)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EmptyFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.EmptyFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>8</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>3</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>5</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>8</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>NotFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NotFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNot(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/NotFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveClass</mutatedMethod><methodDescription>(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2(org.apache.commons.io.input.ClassLoaderObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/ClassLoaderObjectInputStream::resolveClass to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveClass</mutatedMethod><methodDescription>(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ClassLoaderObjectInputStream::resolveClass to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveProxyClass</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Class;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClassWithMultipleInterfaces(org.apache.commons.io.input.ClassLoaderObjectInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveProxyClass</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Class;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClassWithMultipleInterfaces(org.apache.commons.io.input.ClassLoaderObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveProxyClass</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Class;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClassWithMultipleInterfaces(org.apache.commons.io.input.ClassLoaderObjectInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/ClassLoaderObjectInputStream::resolveProxyClass to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ClassLoaderObjectInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClassLoaderObjectInputStream</mutatedClass><mutatedMethod>resolveProxyClass</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Class;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/ClassLoaderObjectInputStream::resolveProxyClass to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.io.Charsets</mutatedClass><mutatedMethod>requiredCharsets</mutatedMethod><methodDescription>()Ljava/util/SortedMap;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>1</block><killingTest>org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets(org.apache.commons.io.input.CharSequenceInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/Charsets::requiredCharsets to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='83'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.io.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='83'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.io.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>7</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/Charsets::toCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='126'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.io.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='126'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.io.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/Charsets::toCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>XmlStreamReaderException.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReaderException</mutatedClass><mutatedMethod>getBomEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReaderException::getBomEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>XmlStreamReaderException.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReaderException</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReaderException::getContentTypeEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>XmlStreamReaderException.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReaderException</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReaderException::getContentTypeMime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>XmlStreamReaderException.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReaderException</mutatedClass><mutatedMethod>getXmlEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReaderException::getXmlEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>XmlStreamReaderException.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReaderException</mutatedClass><mutatedMethod>getXmlGuessEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testCalculateRawEncodingStandardUtf32(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReaderException::getXmlGuessEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AgeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AgeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AgeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AgeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AgeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AgeFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>10</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AgeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AgeFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AgeFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AgeFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/AgeFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DirectoryFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.comparator.DirectoryFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.DirectoryFileComparatorTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DirectoryFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.io.comparator.DirectoryFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.DirectoryFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DirectoryFileComparator</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>(Ljava/io/File;)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.comparator.DirectoryFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.DirectoryFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DirectoryFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DirectoryFileComparator</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>(Ljava/io/File;)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DirectoryFileComparator</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>(Ljava/io/File;)I</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.io.comparator.DirectoryFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.DirectoryFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AutoCloseInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.AutoCloseInputStream</mutatedClass><mutatedMethod>afterRead</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AutoCloseInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.AutoCloseInputStream</mutatedClass><mutatedMethod>afterRead</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/AutoCloseInputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>AutoCloseInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.AutoCloseInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AutoCloseInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.AutoCloseInputStream</mutatedClass><mutatedMethod>finalize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/input/AutoCloseInputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AutoCloseInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.AutoCloseInputStream</mutatedClass><mutatedMethod>finalize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>4</block><killingTest/><description>removed call to java/lang/Object::finalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InfiniteCircularInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.InfiniteCircularInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_handle_whole_range_of_bytes(org.apache.commons.io.input.InfiniteCircularInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InfiniteCircularInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.InfiniteCircularInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_handle_whole_range_of_bytes(org.apache.commons.io.input.InfiniteCircularInputStreamTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InfiniteCircularInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.InfiniteCircularInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_handle_whole_range_of_bytes(org.apache.commons.io.input.InfiniteCircularInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InfiniteCircularInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.InfiniteCircularInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>1</block><killingTest>org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_handle_whole_range_of_bytes(org.apache.commons.io.input.InfiniteCircularInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteOrderParser.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderParser</mutatedClass><mutatedMethod>parseByteOrder</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/ByteOrder;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.ByteOrderParserTest.testThrowsException(org.apache.commons.io.ByteOrderParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderParser.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderParser</mutatedClass><mutatedMethod>parseByteOrder</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/ByteOrder;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.io.ByteOrderParserTest.testThrowsException(org.apache.commons.io.ByteOrderParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderParser.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderParser</mutatedClass><mutatedMethod>parseByteOrder</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/ByteOrder;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.io.ByteOrderParserTest.testParseBig(org.apache.commons.io.ByteOrderParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderParser::parseByteOrder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderParser.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderParser</mutatedClass><mutatedMethod>parseByteOrder</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/ByteOrder;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.io.ByteOrderParserTest.testParseLittle(org.apache.commons.io.ByteOrderParserTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderParser::parseByteOrder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Tracker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/FileDeleteStrategy;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Tracker</mutatedClass><mutatedMethod>delete</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileCleaningTracker.java</sourceFile><mutatedClass>org.apache.commons.io.FileCleaningTracker$Tracker</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileCleaningTracker$Tracker::getPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AbstractFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(org.apache.commons.io.filefilter.RegexFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>AbstractFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AbstractFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>AbstractFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AbstractFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/AbstractFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtensionFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ExtensionFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExtensionFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ExtensionFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testSortList(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtensionFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ExtensionFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testToString(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/ExtensionFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>ReverseComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ReverseComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.comparator.CompositeFileComparatorTest.testToString(org.apache.commons.io.comparator.CompositeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>ReverseComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ReverseComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ReverseComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.ReverseComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testToString(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/ReverseComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.NullWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/NullWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.NullWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/NullWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.NullWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/NullWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.NameFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(org.apache.commons.io.comparator.NameFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>NameFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.NameFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.NameFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.io.comparator.NameFileComparatorTest.testToString(org.apache.commons.io.comparator.NameFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/NameFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PathFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.PathFileComparator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(org.apache.commons.io.comparator.PathFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>PathFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.PathFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTest>org.apache.commons.io.comparator.PathFileComparatorTest.testSortList(org.apache.commons.io.comparator.PathFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PathFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.PathFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.io.comparator.PathFileComparatorTest.testToString(org.apache.commons.io.comparator.PathFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/PathFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TaggedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TaggedInputStream</mutatedClass><mutatedMethod>isCauseOf</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TaggedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.TaggedInputStream</mutatedClass><mutatedMethod>throwIfCauseOf</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/TaggedIOException::throwCauseIfTaggedWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TaggedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TaggedOutputStream</mutatedClass><mutatedMethod>isCauseOf</mutatedMethod><methodDescription>(Ljava/lang/Exception;)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TaggedOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.TaggedOutputStream</mutatedClass><mutatedMethod>throwIfCauseOf</mutatedMethod><methodDescription>(Ljava/lang/Exception;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/TaggedIOException::throwCauseIfTaggedWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RegexpClassNameMatcher.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.RegexpClassNameMatcher</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/regex/Pattern;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RegexpClassNameMatcher.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.RegexpClassNameMatcher</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(org.apache.commons.io.FileDeleteStrategyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileDeleteStrategy.java</sourceFile><mutatedClass>org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker$CancelException</mutatedClass><mutatedMethod>getDepth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker$CancelException</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/DirectoryWalker$CancelException::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MessageDigestCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.MessageDigestCalculatingInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>0</block><killingTest>org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest.test(org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/MessageDigestCalculatingInputStream::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MessageDigestCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.MessageDigestCalculatingInputStream</mutatedClass><mutatedMethod>getMessageDigest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest.test(org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/MessageDigestCalculatingInputStream::getMessageDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>TrueFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.TrueFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TrueFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.TrueFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FalseFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FalseFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FalseFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FalseFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilterBuiltUsingConstructor(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MessageDigestCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver</mutatedClass><mutatedMethod>data</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTest/><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MessageDigestCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver</mutatedClass><mutatedMethod>data</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest.test(org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CanWriteFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.CanWriteFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>FileFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DefaultFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.DefaultFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.io.comparator.DefaultFileComparatorTest.testSortList(org.apache.commons.io.comparator.DefaultFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ClosedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ClosedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>WildcardClassNameMatcher.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.WildcardClassNameMatcher</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(org.apache.commons.io.serialization.WildcardClassNameMatcherTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>HiddenFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.HiddenFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>DirectoryFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.DirectoryFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AppendableOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.AppendableOutputStream</mutatedClass><mutatedMethod>getAppendable</mutatedMethod><methodDescription>()Ljava/lang/Appendable;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.output.AppendableOutputStreamTest.testWriteStringBuilder(org.apache.commons.io.output.AppendableOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/AppendableOutputStream::getAppendable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CanReadFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.CanReadFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FullClassNameMatcher.java</sourceFile><mutatedClass>org.apache.commons.io.serialization.FullClassNameMatcher</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted(org.apache.commons.io.serialization.ValidatingObjectInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
